// Code generated by protoc-gen-go. DO NOT EDIT.
// source: catalog.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vendor int32

const (
	Vendor_BLIBLI    Vendor = 0
	Vendor_BUKALAPAK Vendor = 1
)

var Vendor_name = map[int32]string{
	0: "BLIBLI",
	1: "BUKALAPAK",
}

var Vendor_value = map[string]int32{
	"BLIBLI":    0,
	"BUKALAPAK": 1,
}

func (x Vendor) String() string {
	return proto.EnumName(Vendor_name, int32(x))
}

func (Vendor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{0}
}

type Product struct {
	Vendor               Vendor   `protobuf:"varint,1,opt,name=vendor,proto3,enum=v1.Vendor" json:"vendor,omitempty"`
	Produk               string   `protobuf:"bytes,2,opt,name=produk,proto3" json:"produk,omitempty"`
	Gambar               string   `protobuf:"bytes,3,opt,name=gambar,proto3" json:"gambar,omitempty"`
	Harga                int32    `protobuf:"varint,4,opt,name=harga,proto3" json:"harga,omitempty"`
	Kategori             string   `protobuf:"bytes,5,opt,name=kategori,proto3" json:"kategori,omitempty"`
	Link                 string   `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetVendor() Vendor {
	if m != nil {
		return m.Vendor
	}
	return Vendor_BLIBLI
}

func (m *Product) GetProduk() string {
	if m != nil {
		return m.Produk
	}
	return ""
}

func (m *Product) GetGambar() string {
	if m != nil {
		return m.Gambar
	}
	return ""
}

func (m *Product) GetHarga() int32 {
	if m != nil {
		return m.Harga
	}
	return 0
}

func (m *Product) GetKategori() string {
	if m != nil {
		return m.Kategori
	}
	return ""
}

func (m *Product) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type Products struct {
	Vendor               Vendor     `protobuf:"varint,1,opt,name=vendor,proto3,enum=v1.Vendor" json:"vendor,omitempty"`
	Products             []*Product `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Products) Reset()         { *m = Products{} }
func (m *Products) String() string { return proto.CompactTextString(m) }
func (*Products) ProtoMessage()    {}
func (*Products) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{1}
}

func (m *Products) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Products.Unmarshal(m, b)
}
func (m *Products) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Products.Marshal(b, m, deterministic)
}
func (m *Products) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Products.Merge(m, src)
}
func (m *Products) XXX_Size() int {
	return xxx_messageInfo_Products.Size(m)
}
func (m *Products) XXX_DiscardUnknown() {
	xxx_messageInfo_Products.DiscardUnknown(m)
}

var xxx_messageInfo_Products proto.InternalMessageInfo

func (m *Products) GetVendor() Vendor {
	if m != nil {
		return m.Vendor
	}
	return Vendor_BLIBLI
}

func (m *Products) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type Keyword struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyword) Reset()         { *m = Keyword{} }
func (m *Keyword) String() string { return proto.CompactTextString(m) }
func (*Keyword) ProtoMessage()    {}
func (*Keyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{2}
}

func (m *Keyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyword.Unmarshal(m, b)
}
func (m *Keyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyword.Marshal(b, m, deterministic)
}
func (m *Keyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyword.Merge(m, src)
}
func (m *Keyword) XXX_Size() int {
	return xxx_messageInfo_Keyword.Size(m)
}
func (m *Keyword) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyword.DiscardUnknown(m)
}

var xxx_messageInfo_Keyword proto.InternalMessageInfo

func (m *Keyword) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("v1.Vendor", Vendor_name, Vendor_value)
	proto.RegisterType((*Product)(nil), "v1.Product")
	proto.RegisterType((*Products)(nil), "v1.Products")
	proto.RegisterType((*Keyword)(nil), "v1.Keyword")
	proto.RegisterType((*Response)(nil), "v1.Response")
}

func init() { proto.RegisterFile("catalog.proto", fileDescriptor_0abbfcf058acdf89) }

var fileDescriptor_0abbfcf058acdf89 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x29, 0xd0, 0x52, 0x06, 0x21, 0x64, 0x63, 0xcc, 0x86, 0x53, 0xb3, 0x1c, 0xac, 0x26,
	0x92, 0x80, 0x4f, 0x00, 0x1e, 0x0c, 0x81, 0x03, 0x59, 0x83, 0x9e, 0x97, 0x76, 0x52, 0x91, 0x3f,
	0xdb, 0xec, 0x96, 0x1a, 0x9f, 0xc7, 0x17, 0x35, 0xdd, 0x6e, 0x1b, 0xbd, 0x79, 0x9b, 0xef, 0x9b,
	0x5f, 0x26, 0xdf, 0xcc, 0x2e, 0xf4, 0x23, 0x91, 0x89, 0xa3, 0x4c, 0x26, 0xa9, 0x92, 0x99, 0x24,
	0xcd, 0x7c, 0xca, 0xbe, 0x1d, 0xe8, 0x6c, 0x94, 0x8c, 0x2f, 0x51, 0x46, 0x18, 0x78, 0x39, 0x9e,
	0x63, 0xa9, 0xa8, 0x13, 0x38, 0xe1, 0x60, 0x06, 0x93, 0x7c, 0x3a, 0x79, 0x35, 0x0e, 0xb7, 0x1d,
	0x72, 0x03, 0x5e, 0x5a, 0xe0, 0x07, 0xda, 0x0c, 0x9c, 0xb0, 0xcb, 0xad, 0x2a, 0xfc, 0x44, 0x9c,
	0x76, 0x42, 0xd1, 0x56, 0xe9, 0x97, 0x8a, 0x5c, 0x83, 0xfb, 0x2e, 0x54, 0x22, 0x68, 0x3b, 0x70,
	0x42, 0x97, 0x97, 0x82, 0x8c, 0xc0, 0x3f, 0x88, 0x0c, 0x13, 0xa9, 0xf6, 0xd4, 0x35, 0x7c, 0xad,
	0x09, 0x81, 0xf6, 0x71, 0x7f, 0x3e, 0x50, 0xcf, 0xf8, 0xa6, 0x66, 0x6f, 0xe0, 0xdb, 0x90, 0xfa,
	0x5f, 0x29, 0x6f, 0xc1, 0x4f, 0x2d, 0x4f, 0x9b, 0x41, 0x2b, 0xec, 0xcd, 0x7a, 0x05, 0x65, 0x67,
	0xf0, 0xba, 0xc9, 0xc6, 0xd0, 0x59, 0xe1, 0xd7, 0xa7, 0x54, 0x31, 0xa1, 0x75, 0x69, 0x06, 0x77,
	0x79, 0x25, 0x19, 0x07, 0x9f, 0xa3, 0x4e, 0xe5, 0x59, 0x63, 0x41, 0xe9, 0x4b, 0x14, 0xa1, 0xd6,
	0x86, 0xf2, 0x79, 0x25, 0x8b, 0xdc, 0x91, 0x8c, 0xd1, 0xdc, 0xc5, 0xe5, 0xa6, 0x2e, 0xe8, 0x13,
	0x6a, 0x2d, 0x12, 0xb4, 0x67, 0xa9, 0xe4, 0xfd, 0x18, 0xbc, 0x32, 0x33, 0x01, 0xf0, 0x16, 0xeb,
	0xe5, 0x62, 0xbd, 0x1c, 0x36, 0x48, 0x1f, 0xba, 0x8b, 0xed, 0x6a, 0xbe, 0x9e, 0x6f, 0xe6, 0xab,
	0xa1, 0x33, 0xfb, 0x80, 0xc1, 0x53, 0xf9, 0x62, 0x2f, 0xa8, 0xf2, 0x7d, 0x84, 0xe4, 0x0e, 0xe0,
	0x19, 0x33, 0x6b, 0x12, 0xb3, 0x94, 0x4d, 0x39, 0xba, 0xfa, 0xb5, 0xa1, 0x66, 0x0d, 0xf2, 0x00,
	0xfd, 0x6d, 0x1a, 0x8b, 0x0c, 0x2b, 0xfa, 0x0f, 0x50, 0xe2, 0xd5, 0x5a, 0xac, 0xb1, 0xf3, 0xcc,
	0x9f, 0x78, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x42, 0x19, 0x98, 0xf6, 0x24, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CatalogServiceClient is the client API for CatalogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CatalogServiceClient interface {
	GetCatalog(ctx context.Context, in *Keyword, opts ...grpc.CallOption) (*Products, error)
	UpdateCatalog(ctx context.Context, in *Products, opts ...grpc.CallOption) (*Response, error)
}

type catalogServiceClient struct {
	cc *grpc.ClientConn
}

func NewCatalogServiceClient(cc *grpc.ClientConn) CatalogServiceClient {
	return &catalogServiceClient{cc}
}

func (c *catalogServiceClient) GetCatalog(ctx context.Context, in *Keyword, opts ...grpc.CallOption) (*Products, error) {
	out := new(Products)
	err := c.cc.Invoke(ctx, "/v1.CatalogService/GetCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) UpdateCatalog(ctx context.Context, in *Products, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/v1.CatalogService/UpdateCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CatalogServiceServer is the server API for CatalogService service.
type CatalogServiceServer interface {
	GetCatalog(context.Context, *Keyword) (*Products, error)
	UpdateCatalog(context.Context, *Products) (*Response, error)
}

func RegisterCatalogServiceServer(s *grpc.Server, srv CatalogServiceServer) {
	s.RegisterService(&_CatalogService_serviceDesc, srv)
}

func _CatalogService_GetCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Keyword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CatalogService/GetCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetCatalog(ctx, req.(*Keyword))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_UpdateCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Products)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).UpdateCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CatalogService/UpdateCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).UpdateCatalog(ctx, req.(*Products))
	}
	return interceptor(ctx, in, info, handler)
}

var _CatalogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CatalogService",
	HandlerType: (*CatalogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCatalog",
			Handler:    _CatalogService_GetCatalog_Handler,
		},
		{
			MethodName: "UpdateCatalog",
			Handler:    _CatalogService_UpdateCatalog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "catalog.proto",
}
